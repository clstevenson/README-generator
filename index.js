///////////////////////////////////////////////////////////////////////////////
//                     README Generator for GitHub Repos                     //
///////////////////////////////////////////////////////////////////////////////

/*
 * This is a CLI app that generates a README markdown file based on information
 * provided by the user.
 */

// Include packages needed for this application
const inquirer = require('inquirer');
const fs = require('fs');
// below is a "local" require not from npm
const generateMarkdown = require('./utils/generateMarkdown');

// Function to write README file in the output subdirectory
function writeToFile(fileName, data) {
  const outputDir = './output'
  const imgDir = './output/assets/images'
  let imgFileName = '';

  // if the directory doesn't exist create it
  if (!fs.existsSync(outputDir)) fs.mkdirSync(outputDir);

  // save the MD file
  fileName = outputDir + '/' + fileName;
  fs.writeFileSync(fileName, generateMarkdown(data), err => {
    if (err) {
      console.log(err);
      return err;
    }
  });

  // if there is a screenshot, save it in the appropriate location
  // The screenshot needs to be in the same directory as the app
  if (data.image) {
    // create the subdirectory structure if necessary
    if (!fs.existsSync(imgDir)) fs.mkdirSync(imgDir, { recursive: true });
    // copy the screenshot to the subdirectory
    imgFileName = imgDir + '/' + data.image;
    fs.copyFileSync(data.image, imgFileName);
  }
}

// Function to run the app
function init() {
  // collect question prompts; properties match data object generated by user input
  const prompt = {
    title: 'What is your project TITLE?',
    description: 'Describe your project',
    license: 'Choose a license (more info: choosealicense.com or opensource.org/licenses/)',
    installation: 'Describe the installation process.',
    usage: 'Explain how the project is used.',
    github: 'GitHub user name:',
    email: 'Email:',
    image: 'Screenshot (leave blank to omit):',
    contribute: 'Contribution instructions (leave blank to omit):',
    test: 'Testing instructions (leave blank to omit):'
  };

  /*
   * Prompts for input (using inquirer package)
   * User responses will be used to build the README
   * Some responses are required; these have default
   * values and validation
   */
  inquirer.prompt([
    { // Project title
      type: 'input', name: 'title', message: prompt.title,
      default: "My Project",
      validate: value => {
        if (!value) return "A project title is required.";
        else return true;
      }
    },
    { // Project description
      type: 'editor', name: 'description', message: prompt.description,
      default: 'Description placeholder',
      postfix: '.md',
      validate: value => {
        if (!value) return "Blank descriptions not allowed";
        else return true;
      }
    },
    { // License
      type: 'list', name: 'license', message: prompt.license,
      choices: ['MIT', 'Apache', 'BSD2', 'BSD3', 'ISC', 'GPLv3', 'none'],
    },
    { // Installation instructions
      type: 'editor', name: 'installation', message: prompt.installation,
      default: 'Placeholder for node.js apps: clone or download, open a terminal in the app directory, and type "npm install." ',
      postfix: '.md',
      validate: value => {
        if (!value) return "Blank installation instructions not allowed";
        else return true;
      }
    },
    { // Description of app usage
      type: 'editor', name: 'usage', message: prompt.usage,
      default: 'Usage placeholder',
      postfix: '.md',
      validate: value => {
        if (!value) return "Blank usage instructions not allowed";
        else return true;
      }
    },
    { // screenshot: optional but must be in same directory
      type: 'input', name: 'image', message: prompt.image,
      validate: value => {
        if (value && !fs.existsSync(value)) {
          return "Couldn't find image. Check spelling and verify it is in this directory."
        } else return true;
      }
    },
    // none of the following are required, but blank responses for contact info
    // will result in "empty" spaces on the README that is produced
    { type: 'input', name: 'github', message: prompt.github },
    { type: 'input', name: 'email', message: prompt.email },
    { type: 'input', name: 'contribute', message: prompt.contribute },
    { type: 'input', name: 'test', message: prompt.test }
  ])
    .then(data => {
      // README filename will contain project title for easy of identification
      // Allows for several readmes to be generated
      const filename = data.title.split(' ').join('') + "-README.md";
      if (data.license === 'none') data.license = '';
      const err = writeToFile(filename, data);
      if (!err) console.log("Success! README and any supporting files are in the ./Output directory.");
    })
    .catch(err => console.log(err));
}

// Function call to run the app
// This is the only executible line in the code, all the others are function defs and code imports
init();
